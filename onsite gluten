一轮阿三，面了前端在白板上写网页，一个dropdown选state，一个dropdown选city，问怎么设计，我说这样设计，然后他说reused component的lifecycle会不会混在一起互相干扰，我说不会，他说会，不欢而散
二轮manager，阿三，口音太重，全程不是很积极，问了道算法，在纸上写了code，类似于给你一个array，让你找出不重复的pair，每个pair的和必须出现在array里，【壹， 零，壹】返回【（零，壹）】，说了一个方案，复杂度n方，然后想到一个稍有优化的想法，硬是说我没有啥优化，然后我直接就写了更好的那个版本，那没有优化至少没有更差，你认为一样就一样吧. From 1point 3acres bbs
午饭轮，白人小哥，不记分，买了一包薯片，一杯摩卡，然后问小哥WLB，聊了关于HQ2什么的，当时人很难受，累的要死，mentos快吃完了
第三轮，胖胖的三哥大叔，很友好，写了一个程序，考的是树的题目，dfs，非常nice，可惜好像不是那个组的
-baidu 1point3acres
第四轮，一个华人面孔，不是native口音，一个三哥shadow，全程bq. From 1point 3acres bbs
第五轮，白人大姐，加一个国人小哥shadow，面的了系统设计，前后端怎么设计，后端画了结构，api endpoint写了一下，前端白板上写了react component和css，愉快结束


五论tech
第一轮面试官迟到十分钟 bq二十多分钟 然后花了二十分钟问了一道疑似dp的题 应该是黎蔻139 但是没有时间followup让我优化了 我又不好意思直接给最优解 不知道这算啥… 
2轮 bq 设计缓存 没给机会写太多代码 以bb为主 
3轮 sys design设计太婆a head 
4轮bq加backtracking 
5轮bq 然后让我sort一个list of object 然后 取前k个 我以为是用pq 后来发现面试官有点儿懵逼脸 然后我往oo上靠了靠 疑似ood 吧 … 最后一轮和面试官交流不在一个频道上


基本上面试内容还是集中在BQ和系统设计上，建议大家多多准备这方面相关的内容，尤其是三哥哥们非常非常非常喜欢刨根究底，不把你问倒不罢休。
第一轮是HM面，全程BQ一个接一个，整体就是LP那些东西。但是会给你挖坑，到后面会回过头去问之前问过的东西。。
第二轮是一个很有礼貌和耐心的印度小哥，问了问BST相关的题和scale up大规模的一些follow up
第三轮的两个印度小哥非常严肃，BQ环节压力巨大，不停刨根究底。Tech题问了蠡口上跟开始结束时间有关系的变体，还有变体follow up
第四轮是bar raiser，资深manager。全程系统设计和BQ，跟日志系统有关
第五轮印度小哥，纸质代码找问题（？？）+BQ+tic tac




昂赛1 - 潮流三哥

前半小时，八荣八耻，对答如流。
后半小时做题。 parititon a linkedlist。给定链表的头结点和一个值，返回新的链表头，其结点按照该值做分区，使得前半部分小于后半部分。
潮流哥和代码拍照留念。

昂赛2 - 微笑三哥 + 拉拉白姐
前半小时，八荣八耻，谈笑风生。
后半小时做题。Top K。
拉拉姐和代码拍照留念。
微笑哥蜜汁微笑，带我去休息房放松。

昂赛3 - 金链三叔
前半小时，八荣八耻，坦白从宽。
后半小时做题。具体啥忘记了，比二和还简单。
金链哥和代码拍照留念。

昂赛4 - 耳毛三爷
全程，八荣八耻，指点江山。


LZ 一周前去亚麻blackfoot一日游。亚麻EBS组
1. 美国小姐姐，给定一个图，可一个list of integer 代表每步走的距离, 和两个node, 问能不能从A node 用给定的list of integer 走到 b node
2. 白人manager, behavior
3. 午饭， 中东小哥，随便聊聊
4. 美国小哥， lru cache
5. 美国大爷, 应该是bar raiser, 设计一个create proesss, kill process 的API






第一轮：
BQ 20min: a project you're proud of, chanllege? any debate? how about result/impact ?
Coding: 
1) lc qi shi san.
2) lc san shi san.

第二轮：
BQ 20min: 
1. your invent in a project.
2. a project that doesn't match your skill sets.

OOD:
设计一个图书馆管理系统，支持：
- reserve
- checkout
- return

其中资源包括但不限于：图书，杂志，DVD，游戏碟。。。

- DB schema 怎么设计？
- reserve function 写一下
- resultful API 写一下
- 最后还有一个有意思的问题：假如库存只剩一本，被线上预定了。这时有另外一个人walk-in到这个图书馆，看到这本书，想借走。你借是不借？？

第三轮：
俩小哥同时，它俩不在Lex。

上来先coding:
题目就是：标准的拓扑排序你写一遍。

BQ：. check 1point3acres for more.
1. tell me the biggest mistake you made in your work.
2. tell me a time you strongly disagree with your leader.

第四轮：
BQ：miss deadline 怎么办-baidu 1point3acres



archtecture desgin:
设计flight query service， 其中2%流量向其中更新数据，98%流量query。
response 要求不超过2秒（这个延迟已经很高了啊）
TPS 1000TPS （后来follow-up到unlimited，怎样scale out）
flight data for one year 有 38 million 条

query filter包括：只针对单程机票
起降地点
时间
最高票价
non/1/2 - stop

DB层面：
DB 怎么设计能优化搜索，用不用partition？
分布式DB怎么设计

第五轮：
BQ：
1. a project when you have a lot of obstacles
2. a time when you could have stopped working but persisted.

System design:
设计个scalable queueing system。（感觉说白了就是让你讲一遍kafka/kinesis）



1.SDEII
1) 让我讲了一下整个deployment的process，从提交code，到continuous integeration，到generate artifacts，到deployment
2) 系统设计: 网站很慢怎么办，如果是slow query引起的怎么办，加cache有几种加法，各个cache的优缺点是什么。如果网站慢是一小部分用户引起的怎么办，如果优化，在我提到rate limitor的时候深入了一下rate limitor是怎么实现的。整个过程比较随意，感觉面试官想到哪就说哪儿

2. 纯BQ，要吐了

3. 
1) Implement HashMap
2) Implement minStack without using Stack

4. Black Jack OOD

5. Given a file of logs Log(userid, timestamp), find all users have logged in last 2 days.
Follow up 1: 你用了两个set来记录两天中出现的用户，能不能只用一个collection？我想了一下改成了Map<user, timestamp>
Follow up 2: 如果让你查询last 7 days呢？我说可以用Map存一个bitset，Map<user, BitSet(7)>，在遍历log的过程中一旦发现bitset中全是1，那么就记录一下这个user
Follow up 3: 如果让你查询非连续的天数，比如让你查第3天，第5天，以及第7天的呢？我说最终满足条件的bitset可以根据输入动态的定，在这种情况下满足条件的结果是 (0010101).

每轮都有很长的BQ，OOD那一轮代码都没写完...
