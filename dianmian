{This} [is a phone interview] loop)===
 { [ (
     { ( } )
     
     {} () []
     {a b c(}); false;
     ) ( false;
     {{{{{}}};false
     
public boolean isValided(String input){
    if(input.length() == 0){
        return true;
    }
    char[] chars = input.toCharArray();
    Stack<Character> stack  = new Stack<>();
    for(char ch : chars){
        if(ch == '{' ){
            stack.push('}');
        }
        else if(ch == '['){
            stack.push(']');
        }
        else if(ch == '('){
            stack.push(')');
        }
        else if(ch == ')'){
            if(stack.isEmpty() || stack.pop() != ch){
                return false;
            }
        }
        else if(ch == '}'){
            if(stack.isEmpty() || stack.pop() != ch){
                return false;
            }
        }
        else if(ch == ')'){
            if(stack.isEmpty() || stack.pop() != ch){
                return false;
            }
        }
    }
    return stack.isEmpty();
}

((Input)
(Input))
{(})
{{{}) --> {{{}}};
{abc}} --> {abc}


public String correctString(String input){
    StringBuilder output = new Stringbuilder();
    Stack<Character> stack = new Stack<>();
    char[] chars = input.toCharArray();
    for(char ch : chars){
        if(ch == '('){
            stack.push(')');
        }
        else if(ch == '['){
            stack.push(']');
        }
        else if(ch == '{'){
            stack.push('}');
        }
        else if(ch == '}' || ch == ']' || ch == ')'){
            if(stack.isEmpty() || ch != stack.pop()){
                continue;
            }
        }
        output.append(String.valueOf(ch));
    }
    while(!stack.isEmpty()){
        output.append(String.valueOf(stack.pop()));
    }
    return output.toString();
}
